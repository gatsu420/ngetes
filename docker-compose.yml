services:
  ngetes:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ngetes
    ports:
      - "8080:8080"
    networks:
      - ngetes-network
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      postgres:
        condition: service_healthy
      migrate-up:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    restart: on-failure:5

  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ngetes-network
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  migrate-down:
    image: migrate/migrate
    container_name: migrate-down
    volumes:
      - ./migrations:/migrations
    networks:
      - ngetes-network
    env_file:
      - .env
    command: ["-path", "/migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", "down", "-all"]
    depends_on:
      postgres:
        condition: service_healthy

  migrate-up:
    image: migrate/migrate
    container_name: migrate-up
    volumes:
      - ./migrations:/migrations
    networks:
      - ngetes-network
    env_file:
      - .env
    command: ["-path", "/migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", "up"]
    depends_on:
      migrate-down:
        condition: service_completed_successfully

  redis:
    image: redis/redis-stack:7.4.0-v1
    container_name: redis-cache
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - ngetes-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  redis-data:

networks:
  ngetes-network:
    driver: bridge
